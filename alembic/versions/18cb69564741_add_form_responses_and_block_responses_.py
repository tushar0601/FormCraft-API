"""add form_responses and block_responses tables

Revision ID: 18cb69564741
Revises: 07eb29fdd4da
Create Date: 2025-09-19 18:13:57.716584

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '18cb69564741'
down_revision: Union[str, Sequence[str], None] = '07eb29fdd4da'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    block_type_enum = postgresql.ENUM(
        'TEXT', 'LONG_TEXT', 'SINGLE_CHOICE', 'MULTICHOICE', 'CHECKBOX', 'DATE', 'NUMBER',
        name='block_type_enum',
        schema='form',
        create_type=False,   # <-- important: do not CREATE TYPE
    )

    op.create_table('form_responses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('form_id', sa.UUID(), nullable=False),
    sa.Column('respondent_user_id', sa.UUID(), nullable=True),
    sa.Column('submitted_ip', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('IN_PROGRESS', 'SUBMITTED', 'SPAM', 'DELETED', name='response_status_enum', schema='form'), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['form.forms.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='form'
    )
    op.create_table('block_responses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('response_id', sa.UUID(), nullable=False),
    sa.Column('form_block_id', sa.UUID(), nullable=False),
    sa.Column('block_type', block_type_enum, nullable=False),
    sa.Column('value', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('time_to_answer_ms', sa.Integer(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['form_block_id'], ['form.form_blocks.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['response_id'], ['form.form_responses.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('response_id', 'form_block_id', name='uq_block_responses_response_block'),
    schema='form'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('block_responses', schema='form')
    op.drop_table('form_responses', schema='form')
    # ### end Alembic commands ###
